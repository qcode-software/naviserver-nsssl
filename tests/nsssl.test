# -*- Tcl -*-
# The contents of this file are subject to the Mozilla Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://mozilla.org/
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
# the License for the specific language governing rights and limitations
# under the License.
#
# Copyright 2006 (C) Stephen Deasey <sdeasey@gmail.com>
# Copyright 2015 (C) Gustaf Neumann <neumann@wu-wien.ac.at>
#
# Alternatively, the contents of this file may be used under the terms
# of the GNU General Public License (the "GPL"), in which case the
# provisions of GPL are applicable instead of those above.  If you wish
# to allow use of your version of this file only under the terms of the
# GPL and not to allow others to use your version of this file under the
# License, indicate your decision by deleting the provisions above and
# replace them with the notice and other provisions required by the GPL.
# If you do not delete the provisions above, a recipient may use your
# version of this file under either the License or the GPL.
#
#


#
# Test the nsssl module
#


package require tcltest 2.2
namespace import -force ::tcltest::*

::tcltest::configure {*}$argv

if {[ns_config ns/server/test/module/nsssl port] ne ""} {
    testConstraint serverListen true
}

test nsssl-1.1 {short request 1.0} -constraints {serverListen} -setup {
    ns_register_proc GET /get {
        ns_return 200 text/plain "Hello World"
    }
} -body {
    nstest::https -http 1.0 -getbody 1 GET /get
} -cleanup {
    ns_unregister_op GET /get
} -result "200 {Hello World}"


test nsssl-1.2 {short request 1.1} -constraints {serverListen} -setup {
    ns_register_proc GET /get {
        ns_return 200 text/plain "Hello World"
    }
} -body {
    nstest::https -http 1.1 -getbody 1 GET /get
} -cleanup {
    ns_unregister_op GET /get
} -result "200 {Hello World}"


test nsssl-1.3 {longer request} -constraints {serverListen} -setup {
    ns_register_proc GET /get {
        ns_return 200 text/plain [string repeat "0123456789" 100]
    }
} -body {
    nstest::https -getbody 0 -getheaders {Content-Length} GET /get
} -cleanup {
    ns_unregister_op GET /get
} -result "200 1000"


test nsssl-1.4 {via writer} -constraints {serverListen} -setup {
    ns_register_proc GET /get {
        ns_return 200 text/plain [string repeat "0123456789" 500]
    }
} -body {
    nstest::https -http 1.1 -getbody 0 -getheaders {Content-Length} GET /get
} -cleanup {
    ns_unregister_op GET /get
} -result "200 5000"


test nsssl-1.5 {via writer 500k} -constraints {serverListen} -setup {
    ns_register_proc GET /get {
        ns_return 200 text/plain [string repeat "0123456789" 50000]
    }
} -body {
    nstest::https -http 1.1 -getbody 0 -getheaders {Content-Length} GET /get
} -cleanup {
    ns_unregister_op GET /get
} -result "200 500000"


test nsssl-1.6 {with query} -constraints {serverListen} -setup {
    ns_register_proc GET /get/foo {
        ns_return 200 text/plain [ns_conn query]
    }
} -body {
    nstest::https -http 1.1 -getbody 1 GET /get/foo?q=1
} -cleanup {
    ns_unregister_op GET /get/foo
} -result "200 q=1"


cleanupTests
