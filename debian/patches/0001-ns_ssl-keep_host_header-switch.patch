From: David Osborne <david@qcode.co.uk>
Date: Tue, 7 Jul 2015 10:32:26 +0100
Subject: ns_ssl: keep_host_header switch

---
 README.md |    2 +-
 nsssl.c   |   36 +++++++++++++++++++++++++++---------
 2 files changed, 28 insertions(+), 10 deletions(-)

diff --git a/README.md b/README.md
index 9459ca0..0247e27 100644
--- a/README.md
+++ b/README.md
@@ -104,7 +104,7 @@ adds new ns_ssl command.
     ns_ssl cancel id
     ns_ssl cleanup
     ns_ssl list
-    ns_ssl queue ?-method M? ?-headers S? ?-body B? ?-timeout T? ?-cert C? ?-cafile CA? ?-capath CP? ?-verify? -url
+    ns_ssl queue ?-method M? ?-headers S? ?-body B? ?-timeout T? ?-cert C? ?-cafile CA? ?-capath CP? ?-verify? ?-keep_host_header? url
     ns_ssl run ?-method M? ?-headers S? ?-body B? ?-timeout T? url
     ns_ssl wait ?-elapsed varName? ?-file varName? ?-headers H? ?-result varName? ?-spoolsize int? ?-status varName? ?-timeout t? ?-decompress? id
 
diff --git a/nsssl.c b/nsssl.c
index 6583b4b..5865e5c 100644
--- a/nsssl.c
+++ b/nsssl.c
@@ -79,7 +79,7 @@ static int SSLPassword(char *buf, int num, int rwflag, void *userdata);
 static void SSLLock(int mode, int n, const char *file, int line);
 static unsigned long SSLThreadId(void);
 static int HttpsConnect(Tcl_Interp *interp, char *method, char *url, Ns_Set *hdrPtr,
-			Tcl_Obj *bodyPtr, char *cert, char *caFile, char *caPath, int verify,
+			Tcl_Obj *bodyPtr, char *cert, char *caFile, char *caPath, int verify, bool keep_host_header,
 			Https **httpsPtrPtr);
 static void HttpsClose(Https *httpsPtr);
 static void HttpsCancel(Https *httpsPtr);
@@ -751,6 +751,7 @@ SSLObjCmd(ClientData arg, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[])
         char *cert = NULL;
         char buf[32], *url = NULL, *method = "GET", *caFile = NULL, *caPath = NULL;
         Tcl_Obj *bodyPtr = NULL;
+	bool keep_host_header = NS_FALSE;
 
         Ns_ObjvSpec opts[] = {
             {"-timeout",  Ns_ObjvTime,    &timeoutPtr,  NULL},
@@ -761,6 +762,7 @@ SSLObjCmd(ClientData arg, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[])
             {"-capath",   Ns_ObjvString,  &caPath,      NULL},
             {"-body",     Ns_ObjvObj,     &bodyPtr,     NULL},
             {"-verify",   Ns_ObjvBool,    &verify,      NULL},
+	    {"-keep_host_header", Ns_ObjvBool, &keep_host_header,    (void *)NS_TRUE},
             {NULL, NULL,  NULL, NULL}
         };
         Ns_ObjvSpec args[] = {
@@ -771,7 +773,7 @@ SSLObjCmd(ClientData arg, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[])
             return TCL_ERROR;
         }
 	if (HttpsConnect(interp, method, url, hdrPtr, bodyPtr, 
-			 cert, caFile, caPath, verify,
+			 cert, caFile, caPath, verify, keep_host_header,
 			 &httpsPtr) != TCL_OK) {
 	    return TCL_ERROR;
 	}
@@ -1028,7 +1030,7 @@ HttpsGet(Tcl_Interp *interp, char *id)
 
 int
 HttpsConnect(Tcl_Interp *interp, char *method, char *url, Ns_Set *hdrPtr, Tcl_Obj *bodyPtr, 
-	     char *cert, char *caFile, char *caPath, int verify,
+	     char *cert, char *caFile, char *caPath, int verify, bool keep_host_header,
 	     Https **httpsPtrPtr)
 {
     NS_SOCKET    sock;
@@ -1045,12 +1047,24 @@ HttpsConnect(Tcl_Interp *interp, char *method, char *url, Ns_Set *hdrPtr, Tcl_Ob
 	Tcl_AppendResult(interp, "invalid url: ", url, NULL);
 	return TCL_ERROR;
     }
+
+    /* 
+     * If host_keep_header set then Host header must be present.
+     */
+
+    if (keep_host_header == NS_TRUE) {
+        if ( hdrPtr == NULL || Ns_SetIFind(hdrPtr, "Host") == -1 ) {
+	    Tcl_AppendResult(interp, "keep_host_header specified but no Host header given", NULL);
+	    return TCL_ERROR;
+        }
+    }
+
     /*
      * Make a non-const copy of url, where we can replace the item separating
      * characters with '\0' characters.
      */
     url2 = ns_strdup(url);
-    
+
     host = url2 + 8;
     file = strchr(host, '/');
     if (file != NULL) {
@@ -1163,7 +1177,9 @@ HttpsConnect(Tcl_Interp *interp, char *method, char *url, Ns_Set *hdrPtr, Tcl_Ob
 	/*
 	 * Remove the header fields, we are providing
 	 */
-	Ns_SetIDeleteKey(hdrPtr, "Host");
+        if (keep_host_header == NS_FALSE) {
+	    Ns_SetIDeleteKey(hdrPtr, "Host");
+        }
 	Ns_SetIDeleteKey(hdrPtr, "Connection");
 	Ns_SetIDeleteKey(hdrPtr, "Content-Length");
 
@@ -1190,10 +1206,12 @@ HttpsConnect(Tcl_Interp *interp, char *method, char *url, Ns_Set *hdrPtr, Tcl_Ob
 			 Ns_InfoServerVersion());
     }
     
-    if (portString == NULL) {
-	Ns_DStringPrintf(&httpPtr->ds, "Host: %s\r\n", host);
-    } else {
-	Ns_DStringPrintf(&httpPtr->ds, "Host: %s:%d\r\n", host, portNr);
+    if (keep_host_header == NS_FALSE) {
+        if (portString == NULL) {
+	    Ns_DStringPrintf(&httpPtr->ds, "Host: %s\r\n", host);
+        } else {
+	    Ns_DStringPrintf(&httpPtr->ds, "Host: %s:%d\r\n", host, portNr);
+        }
     }
 
     if (bodyPtr != NULL) {
